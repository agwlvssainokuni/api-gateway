########################################################################
# LOG CONFIGURATION
spring.main.banner-mode=off
logging.pattern.console=%d{yyyy-MM-dd-HH:mm:ss.SSS} %-5level [%thread] %logger - %msg%n%xEx
logging.level.root=WARN
logging.level.cherry=TRACE
logging.level.org.springframework=INFO
logging.level.org.springframework.cloud=DEBUG
logging.level.reactor.netty.http.server.AccessLog=INFO

########################################################################
# ACTUATOR CONFIGURATION
management.endpoint.gateway.enabled=true
management.endpoints.web.exposure.include=gateway
spring.cloud.gateway.actuator.verbose.enabled=false

########################################################################
# GATEWAY PORT CONFIGURATION
server.port=8090

########################################################################
# CORS CONFIGURATION
#spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true

spring.cloud.gateway.globalcors.cors-configurations.[/prvapi/**].allowed-origins=*
spring.cloud.gateway.globalcors.cors-configurations.[/prvapi/**].allowed-methods=GET, HEAD, POST
spring.cloud.gateway.globalcors.cors-configurations.[/prvapi/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/prvapi/**].max-age=1800

spring.cloud.gateway.globalcors.cors-configurations.[/pubapi/**].allowed-origins=*
spring.cloud.gateway.globalcors.cors-configurations.[/pubapi/**].allowed-methods=GET, HEAD, POST
spring.cloud.gateway.globalcors.cors-configurations.[/pubapi/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/pubapi/**].max-age=1800

########################################################################
# BACKEND SERVER CONFIGURATION
spring.cloud.gateway.routes[0].id=prvapi
spring.cloud.gateway.routes[0].uri=http://localhost:8081/
spring.cloud.gateway.routes[0].predicates[0]=Path=/prvapi/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[0].filters[1]=RemoveRequestHeader=Authorization
spring.cloud.gateway.routes[0].filters[2]=AddRequestHeaderFromJwt=X-JWT-SUB, sub

spring.cloud.gateway.routes[1].id=pubapi
spring.cloud.gateway.routes[1].uri=http://localhost:8081/
spring.cloud.gateway.routes[1].predicates[0]=Path=/pubapi/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[1].filters[1]=RemoveRequestHeader=Authorization
spring.cloud.gateway.routes[1].filters[2]=AddRequestHeaderFromJwt=X-JWT-SUB, sub

########################################################################
# OAUTH2 CONFIGURATION
# (standard) Single Asymmetric Key
# spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:mydemo.pub

# (standard) single tenant
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/auth/realms/mydemo

# (standard) multi tenant
#cherry.api-gateway.resolver-type=multitenant
cherry.api-gateway.issuer-list=http://localhost:8080/auth/realms/mydemo, http://localhost:8080/auth/realms/mydemo2, http://localhost:8080/auth/realms/mydemo3

# (custom) Azure AD B2C
#cherry.api-gateway.resolver-type=aadb2c
cherry.api-gateway.issuer-map[0].issuer=http://localhost:8080/auth/realms/mydemo
cherry.api-gateway.issuer-map[0].oidc-issuer-location=http://localhost:8080/auth/realms/mydemo
cherry.api-gateway.issuer-map[1].issuer=http://localhost:8080/auth/realms/mydemo2
cherry.api-gateway.issuer-map[1].oidc-issuer-location=http://localhost:8080/auth/realms/mydemo2
cherry.api-gateway.issuer-map[2].issuer=http://localhost:8080/auth/realms/mydemo3
cherry.api-gateway.issuer-map[2].oidc-issuer-location=http://localhost:8080/auth/realms/mydemo3
